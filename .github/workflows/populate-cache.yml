name: Populate Build Cache

on:
  workflow_dispatch:

jobs:
  cache:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk
      NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
      TAURI_SKIP_DEVSERVER: true
      CARGO_TERM_COLOR: always
      PATH: $PATH:$HOME/.cargo/bin

    steps:
      # ðŸ§° Installa Git (serve per evitare l'errore "tar not found")
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git

      # ðŸ“¥ Checkout repository tramite Git (niente tar)
      - name: Checkout repository (with Git)
        run: |
          git clone --depth=1 https://github.com/${{ github.repository }} .
          git fetch --tags

      # ðŸ¦€ Installa toolchain Rust
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # ðŸ§° Cache Cargo
      - name: Populate Cargo cache
        run: |
          cargo fetch
        env:
          CARGO_HOME: ~/.cargo

      - name: Save Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-v3

      # ðŸ§° Installa Tauri CLI
      - name: Install Tauri CLI
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          if [ -f ~/.cargo/env ]; then source ~/.cargo/env; fi
          cargo install tauri-cli --locked

      # ðŸ§° Salva cache Tauri CLI
      - name: Save Tauri CLI cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-tauri-cli-v3

      # ðŸ¤– Prepara Android SDK
      - name: Install Android SDK tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o tools.zip
          unzip -q tools.zip
          rm tools.zip
          mv cmdline-tools latest

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Save Android SDK cache
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-android-sdk-v2