name: Build Android APK (Optimized with Cache)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  ANDROID_HOME: /usr/local/lib/android/sdk
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
  TAURI_SKIP_DEVSERVER: true
  CARGO_TERM_COLOR: always

# 🧰 JOB 1 — Popola la cache (lancialo solo quando serve aggiornarla)
jobs:
  populate-cache:
    name: 🧰 Populate Cache (Tauri CLI + SDK + Targets)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository (main)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🦀 Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: 🧰 Install Android targets for Rust
        run: |
          rustup target add aarch64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add x86_64-linux-android
          rustup target add i686-linux-android

      - name: 📦 Cache Tauri CLI
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-tauri-cli-v2

      - name: 🦀 Install Tauri CLI if missing
        run: |
          if [ ! -f ~/.cargo/bin/cargo-tauri ]; then
            cargo install tauri-cli --locked
          fi
          ~/.cargo/bin/cargo-tauri --version

      - name: 📦 Cache Android SDK
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-android-sdk-v2

      - name: 📲 Install Android SDK cmdline-tools if missing
        run: |
          if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools/latest" ]; then
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
            cd $ANDROID_SDK_ROOT/cmdline-tools
            curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdline-tools.zip
            unzip -q cmdline-tools.zip
            mv cmdline-tools latest
            rm cmdline-tools.zip
          fi
          echo "PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_ENV

      - name: 📜 Accept Android licenses
        run: yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      - name: 🧰 Install Android SDK & NDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

# 🧪 JOB 2 — Build Debug APK
  build-debug:
    name: 🧪 Build Debug APK
    runs-on: ubuntu-latest
    needs: populate-cache

    steps:
      - name: 📥 Checkout repository (main)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: ♻️ Restore caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            /usr/local/lib/android/sdk

      - name: 🏗️ Build Debug APK
        run: |
          if [ -f ~/.cargo/env ]; then source ~/.cargo/env; fi
          cargo tauri android build --debug

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: opnmanager-debug-apk
          path: src-tauri/gen/android/app/build/outputs/apk/debug/*.apk

# 🚀 JOB 3 — Build Release APK
  build-release:
    name: 🚀 Build Release APK
    runs-on: ubuntu-latest
    needs: build-debug

    steps:
      - name: 📥 Checkout repository (main)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: ♻️ Restore caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            /usr/local/lib/android/sdk

      - name: 🔐 Generate keystore
        run: |
          keytool -genkeypair -v -keystore release-key.jks -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass android -keypass android -dname "CN=OPNManager, OU=Dev, O=Dev, L=City, ST=State, C=US" \
            -alias opnmanager

      - name: 🚀 Build Release APK
        run: |
          if [ -f ~/.cargo/env ]; then source ~/.cargo/env; fi
          cargo tauri android build --release -- \
            --signing-key release-key.jks \
            --alias opnmanager \
            --storepass android \
            --keypass android

      - name: 🏷️ Rename release APK
        run: |
          TAG_NAME=${GITHUB_REF_NAME}
          APK_DIR="src-tauri/gen/android/app/build/outputs/apk/release"
          APK_FILE=$(ls $APK_DIR/*.apk | head -n 1)
          NEW_NAME="OPNManager-${TAG_NAME}-release.apk"
          mv "$APK_FILE" "$APK_DIR/$NEW_NAME"
          echo "RENAMED_APK=$APK_DIR/$NEW_NAME" >> $GITHUB_ENV

      - name: 📤 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: opnmanager-release-apk
          path: ${{ env.RENAMED_APK }}

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.RENAMED_APK }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
