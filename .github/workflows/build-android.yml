name: ANDROID â€“ NO ACTIONS â€“ DEBUG ONLY

on:
  workflow_dispatch: {}

permissions:
  contents: write

env:
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  ANDROID_HOME: /usr/local/lib/android/sdk
  NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
  TAURI_SKIP_DEVSERVER: true
  CARGO_TERM_COLOR: always
  DEBIAN_FRONTEND: noninteractive

jobs:
  build-debug:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ§° System deps
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y git tar curl unzip zip xz-utils build-essential pkg-config openjdk-17-jdk
          which tar && tar --version
          which git && git --version

      - name: ðŸ“¥ Clone repo (manuale)
        run: |
          set -euxo pipefail
          git clone "https://github.com/${GITHUB_REPOSITORY}.git" .
          git fetch --all --tags --force
          git checkout -f "${GITHUB_SHA}"
          git submodule update --init --recursive || true

      - name: ðŸŸ© Node 20 + build frontend
        run: |
          set -euxo pipefail
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v && npm -v
          npm ci
          npm run build || true

      - name: ðŸ¦€ Rust & Tauri CLI
        run: |
          set -euxo pipefail
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          source "$HOME/.cargo/env"
          rustup target add aarch64-linux-android armv7-linux-androideabi
          cargo install tauri-cli --locked
          cargo tauri --version

      - name: ðŸ¤– Android SDK/NDK (non-interactive + licenses)
        run: |
          set -euxo pipefail
          sudo mkdir -p "$ANDROID_SDK_ROOT"
          sudo chown -R "$USER:$USER" "$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          if [ ! -d "latest" ]; then
            curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdline-tools.zip
            unzip -q cmdline-tools.zip
            mv cmdline-tools latest
            rm cmdline-tools.zip
          fi
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          mkdir -p "$ANDROID_SDK_ROOT/licenses"
          printf "%s\n" "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_SDK_ROOT/licenses/android-sdk-license"
          printf "%s\n" "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --licenses >/dev/null || true
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

      - name: ðŸ§ª Build Debug APK
        run: |
          set -euxo pipefail
          source "$HOME/.cargo/env"
          cargo tauri android build --debug
          echo "Debug APK(s):"
          find src-tauri/gen/android/app/build/outputs/apk/debug -maxdepth 1 -name "*.apk" -type f || true